---
export interface Props {
  title?: string;
  description?: string;
}

const { title = "Fundación DAADIOS", description = "Transformando vidas a través de la educación" } = Astro.props;
---

<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/SÍMBOLO_COLOR.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    
    <!-- PWA Manifest -->
    <link rel="manifest" href="/manifest.json">
    
    <!-- SEO Meta Tags -->
    <meta name="robots" content="index, follow">
    <meta name="author" content="Fundación DAADIOS">
    <meta name="keywords" content="fundación, educación, becas, escazú, costa rica, estudiantes, secundaria, DAADIOS">
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://fundaciondaadios.org/">
    <meta property="og:title" content={title}>
    <meta property="og:description" content={description}>
    <meta property="og:image" content="https://fundaciondaadios.org/daadios-logo.svg">
    <meta property="og:locale" content="es_CR">
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image">
    <meta property="twitter:url" content="https://fundaciondaadios.org/">
    <meta property="twitter:title" content={title}>
    <meta property="twitter:description" content={description}>
    <meta property="twitter:image" content="https://fundaciondaadios.org/daadios-logo.svg">
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Global Styles -->
    <style>
      :root {
        /* Brand Colors */
        --color-primary: #F58220;
        --color-yellow: #FFC20E;
        --color-brown: #C15E20;
        --color-blue: #1C78BE;
        --color-light-blue: #41B9D8;
        
        /* Neutral Colors */
        --color-dark: #2C3E50;
        --color-gray: #7F8C8D;
        --color-light-gray: #ECF0F1;
        --color-white: #FFFFFF;
        
        /* Typography */
        --font-primary: 'Poppins', sans-serif;
        
        /* Spacing */
        --spacing-xs: 0.5rem;
        --spacing-sm: 1rem;
        --spacing-md: 1.5rem;
        --spacing-lg: 2rem;
        --spacing-xl: 3rem;
        --spacing-xxl: 4rem;
        
        /* Borders */
        --border-radius: 8px;
        --border-radius-lg: 16px;
        
        /* Shadows */
        --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.1);
        --shadow-md: 0 4px 8px rgba(0, 0, 0, 0.15);
        --shadow-lg: 0 8px 16px rgba(0, 0, 0, 0.2);
      }
      
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      
      html {
        scroll-behavior: smooth;
        box-sizing: border-box;
      }
      
      *, *::before, *::after {
        box-sizing: inherit;
      }
      
      body {
        font-family: var(--font-primary);
        color: var(--color-dark);
        line-height: 1.6;
        overflow-x: hidden;
        margin: 0;
        padding-left: 80px;
        padding-right: 80px;
        box-sizing: border-box;
        min-height: 100vh;
      }
      
      /* Force margin on all main sections */
      main > * {
        margin-left: 0;
        margin-right: 0;
      }
      
      /* Force padding on header and footer */
      header,
      footer {
        padding-left: 0;
        padding-right: 0;
      }
      
      .container {
        max-width: 1200px;
        margin-left: auto;
        margin-right: auto;
        width: 100%;
        box-sizing: border-box;
        padding-left: 0;
        padding-right: 0;
        overflow-x: hidden;
      }
      .section {
        width: 100%;
        box-sizing: border-box;
        padding-left: 0;
        padding-right: 0;
        overflow-x: hidden;
      }
      
      .btn {
        display: inline-block;
        padding: var(--spacing-sm) var(--spacing-lg);
        border: none;
        border-radius: var(--border-radius);
        font-family: var(--font-primary);
        font-weight: 600;
        text-decoration: none;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 1rem;
      }
      
      .btn-primary {
        background: var(--color-primary);
        color: var(--color-white);
      }
      
      .btn-primary:hover {
        background: var(--color-brown);
        transform: translateY(-2px);
        box-shadow: var(--shadow-md);
      }
      
      .btn-secondary {
        background: var(--color-blue);
        color: var(--color-white);
      }
      
      .btn-secondary:hover {
        background: #155a8a;
        transform: translateY(-2px);
        box-shadow: var(--shadow-md);
      }
      
      .btn-outline {
        background: transparent;
        color: var(--color-primary);
        border: 2px solid var(--color-primary);
      }
      .btn-outline:hover {
        background: var(--color-primary);
        color: var(--color-white);
      }

      /* Botón grande para CTA principal */
      .btn-large {
        padding: calc(var(--spacing-md) + 5px) calc(var(--spacing-xxl) + 5px);
        font-size: 1.2rem;
        border-radius: var(--border-radius);
        font-weight: 600;
        box-shadow: var(--shadow-sm);
      }

      .section {
        padding: var(--spacing-xxl) 0;
      }
      
      .section-title {
        font-size: 2.5rem;
        font-weight: 700;
        text-align: center;
        margin-bottom: var(--spacing-xl);
        color: var(--color-dark);
      }
      
      .section-subtitle {
        font-size: 1.2rem;
        text-align: center;
        color: var(--color-gray);
        margin-bottom: var(--spacing-xl);
        max-width: 600px;
        margin-left: auto;
        margin-right: auto;
      }
      
      /* Form error styles */
      .error {
        border-color: #e74c3c !important;
        box-shadow: 0 0 0 2px rgba(231, 76, 60, 0.2) !important;
      }
      
      .error-message {
        color: #e74c3c;
        font-size: 0.875rem;
        margin-top: var(--spacing-xs);
      }
      
      /* Animation classes */
      .fade-in {
        opacity: 0;
        transform: translateY(30px);
        transition: opacity 0.6s ease, transform 0.6s ease;
      }
      
      .fade-in.visible {
        opacity: 1;
        transform: translateY(0);
      }
      
      @media (max-width: 768px) {
        body {
          padding-left: 6px;
          padding-right: 6px;
        }
        .container {
          padding-left: 0;
          padding-right: 0;
        }
        .section {
          padding-left: 0;
          padding-right: 0;
        }
        .section-title {
          font-size: 2rem;
        }
        .btn {
          width: 100%;
          margin-bottom: var(--spacing-sm);
        }
      }
    </style>
  </head>
  <body>
    <slot />
    
    <script>
      // Mobile menu toggle
      const navToggle = document.getElementById('nav-toggle');
      const navMenu = document.getElementById('nav-menu');
      
      navToggle?.addEventListener('click', () => {
        navMenu?.classList.toggle('active');
        navToggle?.classList.toggle('active');
      });
      
      // Close menu when clicking on a link
      document.querySelectorAll('.nav-link').forEach(link => {
        link.addEventListener('click', () => {
          navMenu?.classList.remove('active');
          navToggle?.classList.remove('active');
        });
      });
      
      // Smooth scrolling for navigation links
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const target = document.querySelector(this.getAttribute('href'));
          if (target) {
            const headerHeight = document.querySelector('.header')?.offsetHeight || 70;
            const targetPosition = target.offsetTop - headerHeight - 20;
            
            window.scrollTo({
              top: targetPosition,
              behavior: 'smooth'
            });
          }
        });
      });
      
      // Header scroll effect
      window.addEventListener('scroll', function() {
        const header = document.querySelector('.header');
        if (window.scrollY > 100) {
          header.style.background = 'rgba(255, 255, 255, 0.95)';
          header.style.backdropFilter = 'blur(10px)';
        } else {
          header.style.background = 'var(--color-white)';
          header.style.backdropFilter = 'none';
        }
      });
      
      // Form validation
      document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('.application-form');
        if (!form) return;

        form.addEventListener('submit', function(e) {
          const requiredFields = form.querySelectorAll('[required]');
          let isValid = true;
          
          requiredFields.forEach(field => {
            if (!field.value.trim()) {
              isValid = false;
              field.classList.add('error');
            } else {
              field.classList.remove('error');
            }
          });
          
          // Validate email
          const email = form.querySelector('#email');
          if (email && email.value) {
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email.value)) {
              isValid = false;
              email.classList.add('error');
            }
          }
          
          // Validate average (must be 80 or higher)
          const average = form.querySelector('#average');
          if (average && average.value) {
            if (parseFloat(average.value) < 80) {
              isValid = false;
              average.classList.add('error');
              alert('El promedio debe ser mayor a 80 para aplicar a la beca.');
            }
          }
          
          if (!isValid) {
            e.preventDefault();
            alert('Por favor, complete todos los campos requeridos correctamente.');
          }
        });
        
        // Remove error class on input
        const inputs = form.querySelectorAll('input, select, textarea');
        inputs.forEach(input => {
          input.addEventListener('input', function() {
            this.classList.remove('error');
          });
        });
        
        // Format phone number
        const phoneInput = form.querySelector('#phone');
        if (phoneInput) {
          phoneInput.addEventListener('input', function() {
            let value = this.value.replace(/\D/g, '');
            if (value.length >= 8) {
              value = value.replace(/(\d{4})(\d{4})/, '$1-$2');
            }
            this.value = value;
          });
        }
        
        // Format ID numbers
        const idInputs = form.querySelectorAll('#student-id, #guardian-id');
        idInputs.forEach(input => {
          input.addEventListener('input', function() {
            let value = this.value.replace(/\D/g, '');
            if (value.length >= 9) {
              value = value.replace(/(\d{1})(\d{4})(\d{4})/, '$1-$2-$3');
            }
            this.value = value;
          });
        });
      });
      
      // Intersection Observer for animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver(function(entries) {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.style.opacity = '1';
            entry.target.style.transform = 'translateY(0)';
          }
        });
      }, observerOptions);

      // Observe elements for animation
      document.addEventListener('DOMContentLoaded', function() {
        const animatedElements = document.querySelectorAll('.service-card, .value-card, .step, .timeline-item');
        
        animatedElements.forEach(el => {
          el.style.opacity = '0';
          el.style.transform = 'translateY(30px)';
          el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
          observer.observe(el);
        });
      });
    </script>
  </body>
</html>
